#!/bin/ksh

#/* Part of the Maestro sequencer software package.
# * Copyright (C) 2011-2015  Operations division of the Canadian Meteorological Centre
# *                          Environment Canada
# *
# * Maestro is free software; you can redistribute it and/or
# * modify it under the terms of the GNU Lesser General Public
# * License as published by the Free Software Foundation,
# * version 2.1 of the License.
# *
# * Maestro is distributed in the hope that it will be useful,
# * but WITHOUT ANY WARRANTY; without even the implied warranty of
# * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# * Lesser General Public License for more details.
# *
# * You should have received a copy of the GNU Lesser General Public
# * License along with this library; if not, write to the
# * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# * Boston, MA 02111-1307, USA.
# */


arguments=$*

eval `cclargs $0 \
  -n        ""                    ""                           "[Node               ]" \
  -e        ""                    ""                           "[Experiment path    ]" \
  -base     "0"                   "1"                          "[Return base only   ]" \
  -ext      ""                    ""                           "[Extension          ]" \
  -l        ""                    ""                           "[Loop Arguments     ]" \
  -v        ""                   "1"                           "[Verbose            ]" \
  -h        ""                    ""                           "[Display help       ]" \
  ++ $arguments`

[[ -n $v ]] && set -x 

if [[ -z $e ]]; then 
   if [[ -z $SEQ_EXP_HOME ]]; then 
      echo Error: -e argument or SEQ_EXP_HOME must be defined. 1>&2
      exit 1
   else  
      e=$SEQ_EXP_HOME
   fi
fi

[[ $n == "" ]] && echo "Node must be defined" 1>&2 && exit 1 

[[ $l != "" ]] && largs="-l $l"
nodeinfo_out=$TMPDIR/nodeinfo_out.$$
nodeinfo -e $e -n $n $largs > $nodeinfo_out
mach=$(grep node.machine $nodeinfo_out | cut -d "=" -f 2)
[[ $ext == "" ]] && ext=$(grep node.extension $nodeinfo_out | cut -d "=" -f 2)

# Construct path from base
workpath="" 
if [[ ${base} == 0 ]] ; then workpath=/${n}${ext} ; fi

# Return defined workbase if found - otherwise construct it
if [[ -n "${SEQ_WORKBASE}" ]] ; then
    echo ${mach}:${SEQ_WORKBASE}${workpath}
else
    echo ${mach}:${SEQ_EXP_HOME}/hub/${mach}/work/$(tictac -e $e -f %Y%M%D%H%Min%S)${workpath}
fi
rm -f $nodeinfo_out
